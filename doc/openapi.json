{
  "components": {
    "schemas": {
      "AddRuleInput": {
        "properties": {
          "rule": {
            "$ref": "#/components/schemas/Rule"
          }
        },
        "required": [
          "rule"
        ],
        "type": "object"
      },
      "And": {
        "properties": {
          "and": {
            "properties": {
              "expression": {
                "items": {
                  "$ref": "#/components/schemas/Expression"
                },
                "type": "array"
              }
            }
          }
        },
        "type": "object"
      },
      "ApiAddRuleResponse": {
        "properties": {
          "rule": {
            "$ref": "#/components/schemas/VersionedRule"
          }
        },
        "required": [
          "rule"
        ],
        "type": "object"
      },
      "ApiAllRulesResponse": {
        "properties": {
          "code": {
            "type": "string"
          },
          "rules": {
            "items": {
              "$ref": "#/components/schemas/VersionedRule"
            },
            "type": "array"
          }
        },
        "required": [
          "rules"
        ],
        "type": "object"
      },
      "ApiEvaluateRulesResponse": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/EvaluationResult"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ApiReplaceRuleResponse": {
        "properties": {
          "rule": {
            "$ref": "#/components/schemas/VersionedRule"
          }
        },
        "type": "object"
      },
      "ApiRuleVersionsResponse": {
        "properties": {
          "versions": {
            "items": {
              "$ref": "#/components/schemas/VersionedRule"
            },
            "type": "array"
          }
        },
        "required": [
          "versions"
        ],
        "type": "object"
      },
      "Condition": {
        "properties": {
          "condition": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConditionKey"
              },
              {
                "$ref": "#/components/schemas/ConditionRef"
              }
            ]
          }
        },
        "type": "object"
      },
      "ConditionKey": {
        "properties": {
          "key": {
            "type": "string"
          },
          "kind": {
            "$ref": "#/components/schemas/ConditionType"
          },
          "value": {
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConditionRef": {
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/ConditionType"
          },
          "ref": {
            "$ref": "#/components/schemas/DRef"
          },
          "value": {
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConditionType": {
        "enum": [
          "e",
          "hv",
          "eq",
          "neq",
          "px",
          "npx",
          "sx",
          "nsx",
          "in",
          "nin",
          "some",
          "all",
          "none",
          "rgx",
          "nrgx"
        ],
        "type": "string"
      },
      "DRef": {
        "properties": {
          "dst": {
            "type": "string"
          },
          "src": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EvaluateRulesInput": {
        "properties": {
          "object": {
            "description": "Value of any type, including null",
            "nullable": true
          },
          "overrideCode": {
            "type": "string"
          },
          "overrideRules": {
            "items": {
              "$ref": "#/components/schemas/Rule"
            },
            "type": "array"
          }
        },
        "required": [
          "object"
        ],
        "type": "object"
      },
      "EvaluationResult": {
        "properties": {
          "action": {
            "example": "$set",
            "type": "string"
          },
          "by": {
            "example": "rule_01h89qfdhbejtb3jwqq1gazbm5",
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/Target"
          }
        },
        "required": [
          "action",
          "target"
        ],
        "type": "object"
      },
      "Expression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/And"
          },
          {
            "$ref": "#/components/schemas/Or"
          },
          {
            "$ref": "#/components/schemas/Condition"
          }
        ],
        "type": "object"
      },
      "ModelsAction": {
        "properties": {
          "action": {
            "example": "$set",
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/Target"
          }
        },
        "required": [
          "action",
          "target"
        ],
        "type": "object"
      },
      "Or": {
        "properties": {
          "or": {
            "properties": {
              "expression": {
                "items": {
                  "$ref": "#/components/schemas/Expression"
                },
                "type": "array"
              }
            }
          }
        },
        "type": "object"
      },
      "RefreshTokenInput": {
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        },
        "required": [
          "refreshToken"
        ],
        "type": "object"
      },
      "ReplaceRuleInput": {
        "properties": {
          "rule": {
            "$ref": "#/components/schemas/Rule"
          }
        },
        "required": [
          "rule"
        ],
        "type": "object"
      },
      "Rule": {
        "properties": {
          "actions": {
            "items": {
              "$ref": "#/components/schemas/ModelsAction"
            },
            "type": "array"
          },
          "description": {
            "example": "Rule short description",
            "type": "string"
          },
          "expression": {
            "$ref": "#/components/schemas/Expression"
          },
          "id": {
            "example": "rule_01h89qfdhbejtb3jwqq1gazbm5",
            "type": "string"
          }
        },
        "required": [
          "actions",
          "expression",
          "id"
        ],
        "type": "object"
      },
      "Target": {
        "properties": {
          "kind": {
            "example": "customTargetKind",
            "type": "string"
          },
          "target": {
            "example": "$.prop",
            "type": "string"
          },
          "value": {
            "example": "ZXhhbXBsZQ==",
            "type": "string"
          }
        },
        "required": [
          "kind",
          "target"
        ],
        "type": "object"
      },
      "TokenPair": {
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        },
        "required": [
          "accessToken",
          "refreshToken"
        ],
        "type": "object"
      },
      "VersionedRule": {
        "properties": {
          "actions": {
            "items": {
              "$ref": "#/components/schemas/ModelsAction"
            },
            "type": "array"
          },
          "description": {
            "example": "Rule short description",
            "type": "string"
          },
          "expression": {
            "$ref": "#/components/schemas/Expression"
          },
          "id": {
            "example": "rule_01h89qfdhbejtb3jwqq1gazbm5",
            "type": "string"
          },
          "version": {
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "actions",
          "expression",
          "id",
          "version"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "description": "Make sure to include the X-ORG-ID header when using this API key.",
        "in": "header",
        "name": "X-API-KEY",
        "type": "apiKey"
      },
      "JWTAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@dot.industries",
      "name": "Support",
      "url": "https://app.brease.run/support"
    },
    "description": "Business rule engine as a service",
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    },
    "title": "brease API",
    "version": "0.1.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/refreshToken": {
      "post": {
        "description": "Refresh the short lived access token for web access",
        "operationId": "refreshToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPair"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/token": {
      "post": {
        "description": "Generate a short lived access token for web access",
        "operationId": "getToken",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPair"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "JWTAuth": []
          }
        ],
        "tags": [
          "auth"
        ]
      }
    },
    "/{contextID}/evaluate": {
      "post": {
        "description": "Evaluate rules within a context on the provided object",
        "operationId": "evaluateRules",
        "parameters": [
          {
            "in": "path",
            "name": "contextID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluateRulesInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEvaluateRulesResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "JWTAuth": []
          }
        ],
        "tags": [
          "context"
        ]
      }
    },
    "/{contextID}/rules": {
      "get": {
        "description": "Returns all rules with the context",
        "operationId": "getAllRules",
        "parameters": [
          {
            "in": "path",
            "name": "contextID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "in": "query",
            "name": "compileCode",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAllRulesResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "JWTAuth": []
          }
        ],
        "tags": [
          "context"
        ]
      }
    },
    "/{contextID}/rules/add": {
      "post": {
        "description": "Adds a new rule to the context",
        "operationId": "addRule",
        "parameters": [
          {
            "in": "path",
            "name": "contextID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRuleInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAddRuleResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "JWTAuth": []
          }
        ],
        "tags": [
          "context"
        ]
      }
    },
    "/{contextID}/rules/{id}": {
      "delete": {
        "description": "Removes a rule from the context",
        "operationId": "removeRule",
        "parameters": [
          {
            "in": "path",
            "name": "contextID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "JWTAuth": []
          }
        ],
        "tags": [
          "context"
        ]
      },
      "put": {
        "description": "Replaces an existing rule within the context",
        "operationId": "replaceRule",
        "parameters": [
          {
            "in": "path",
            "name": "contextID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceRuleInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiReplaceRuleResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "JWTAuth": []
          }
        ],
        "tags": [
          "context"
        ]
      }
    },
    "/{contextID}/rules/{id}/versions": {
      "get": {
        "description": "Returns all versions of a rule",
        "operationId": "getRuleVersions",
        "parameters": [
          {
            "in": "path",
            "name": "contextID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRuleVersionsResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "JWTAuth": []
          }
        ],
        "tags": [
          "context"
        ]
      }
    }
  },
  "servers": [
    {
      "description": "Cloud hosted production server",
      "url": "https://api.brease.run"
    },
    {
      "description": "Development server",
      "url": "http://localhost:4400"
    }
  ],
  "tags": [
    {
      "description": "Authentication",
      "name": "auth"
    },
    {
      "description": "Ruleset domain context",
      "name": "context"
    }
  ]
}